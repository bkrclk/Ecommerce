@model IEnumerable<ECommerce.Models.ProductModel>
@{
    ViewData["Title"] = "ShoppingCard";
}
<script>

    function DeleteProduct(productId) {

        Swal.fire({
            title: "Ürünü sepetten kaldırılsın mı?",
            text: '',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Evet',
            cancelButtonText: 'İptal'
        }).then((result) => {
            if (result.value) {

                var sData = { productId: productId };

                $.ajax({

                    url: "/Home/DeleteToCard",
                    data: sData,
                    type: "GET",
                    dataType: "html",
                    cache: false,
                    success: function (result1) {

                        CartitemCount();
                        $("#tblBasketList").html(result1);
                        Swal.fire(
                            'Ürün sepetten çıkartıldı',
                            '',
                            'success'
                        )
                    },
                    error: function (jqXHR, textStatus) {
                        alert("Hata meydana geldi.");
                    }
                });
            }
        })
    }

    function CartitemCount() {
        $.post("/Home/ItemControl", function (result) {
            $("#itemCount").text(result);
        })
    }

    function PriceUpdate(id, count) {
        if (count != 0) {
            var sData = { productId: id, count: count };

            $.ajax({

                url: "/Home/UpdatePrice",
                data: sData,
                type: "GET",
                dataType: "json",
                cache: false,
                success: function (result) {

                    BasketTotalAmount();
                    UpdateProduct(id, count)
                },
                error: function (jqXHR, textStatus) {
                    alert("Hata meydana geldi.");
                }
            });
        }
        else {
            Swal.fire(
                'Miktar alanı 0 olamaz!',
                '',
                'error'
            )
            var a = parseFloat($("#labelPrc2_" + id).text());
            var b = parseFloat($("#labelSubTotal_" + id).text());
            $("#maxItemCount_" + id).val(parseInt(b / a));
        }
    }

    function BasketTotalAmount() {
        $.post("/Home/BasketPartial", function (result) {
            $("#tblBasketList").html(result);
        })
    }

    function UpdateProduct(productId, count) {

        var sData = { productId: productId, count: count };
        $.ajax({

            url: "/Home/AddToCard",
            data: sData,
            type: "GET",
            dataType: "json",
            cache: false,
            success: function (result1) {
                if (count <= result1.product.quantity) {
                    CartitemCount();
                }
                else {
                    Swal.fire(
                        'Yetersiz stok! Son ' + result1.product.quantity + ' adet ürün kaldı',
                        '',
                        'error'
                    )
                }
            },
            error: function (jqXHR, textStatus) {
                alert("Hata meydana geldi.");
            }
        });
    }

</script>
<div class="container" id="tblBasketList">
    @await Html.PartialAsync("_BasketPartial", Model)
</div>



